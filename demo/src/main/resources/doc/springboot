事务：
    在Spring Boot中，当我们使用了spring-boot-starter-jdbc或spring-boot-starter-data-jpa依赖的时候，
    框架会自动默认分别注入DataSourceTransactionManager或JpaTransactionManager。
    所以我们不需要任何额外配置就可以用@Transactional注解进行事务的使用。

    使用@Transactional注解来声明一个函数需要被事务管理，通常我们单元测试为了保证每个测试之间的数据独立，
    会使用@Rollback注解让每个单元测试都能在结束时回滚。而真正在开发业务逻辑时，我们通常在service层接口中使用@Transactional
    来对各个业务逻辑进行事务管理的配置




注解：
    @GetMapping(value = "/tree")    等价于  @RequestMapping(value =  "/tree", method = RequestMethod.GET)
    @PostMapping    等价于 @RequestMapping(value =  "/tree", method = RequestMethod.POST)
    @PutMapping     等价于 @RequestMapping(value =  "/tree", method = RequestMethod.PUT)
    @DeleteMapping  等价于 @RequestMapping(value =  "/tree", method = RequestMethod.DELETE)
    @PatchMapping   等价于 @RequestMapping(value =  "/tree", method = RequestMethod.PATCH)